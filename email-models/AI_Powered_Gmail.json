{
  "name": "AI-Powered Gmail",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "summarize-email",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1140,
        420
      ],
      "id": "da8ee51b-5d45-42e2-8c98-32405c58002a",
      "name": "Webhook",
      "webhookId": "0aefc20c-80da-4323-9c66-9d0e723eb9e3"
    },
    {
      "parameters": {
        "operationMode": "nodeInputBinary",
        "options": {
          "binaryDataKey": "={{ $json.data }}",
          "summarizationMethodAndPrompts": {
            "values": {
              "combineMapPrompt": "=## Email Summarization System Prompt\n\nYou are a specialized AI assistant focused exclusively on creating precise, concise summaries of emails. Your task is to analyze the complete email text provided as input and produce a clear, comprehensive summary that captures all essential information in a cohesive narrative format.\n\n### Your responsibilities:\n\n1. Extract and summarize the main topic and purpose of the email\n2. Identify key points, requests, deadlines, or action items mentioned\n3. Preserve critical details like dates, times, locations, and names\n4. Maintain the original tone and urgency level of the message\n5. Organize information in order of importance\n6. Remove unnecessary pleasantries, redundancies, and filler content\n\n### Summary format:\n\n- Utilizing the Vietnamese Language\n- Begin with a one-sentence overview of the email's main purpose\n- Present all key information in a cohesive paragraph format (no bullet points)\n- Follow a logical flow from most to least important information\n- Include any critical deadlines, requests, or action items within the narrative\n- Keep the summary to 3-5 sentences total\n- Use clear, straightforward language with appropriate transitions between ideas\n- Preserve the original intent and meaning without introducing new information\n- Ignore email signature if any\n\n### What to exclude:\n\n- Greetings and sign-offs\n- Redundant information\n- Minor details that don't affect the main message\n- Your own opinions or interpretations\n- Information not explicitly stated in the email\n\nThe email text to summarize is:\n{{$json.data}}",
              "prompt": "=Write a concise summary of the following in max 100 words :\n\n\"{{ $json.data }}\"\n\nUtilizing the Vietnamese Language and do not enter the total number of words used."
            }
          }
        }
      },
      "id": "7c2fb0fd-a9e5-46a2-9842-39692bc8a4bf",
      "name": "Email Summarization Chain",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "position": [
        320,
        1340
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        260,
        1620
      ],
      "id": "27b2ad17-d3fa-4cdf-99a8-662051ac4942",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "jIPBDZRxxuNv6Ke6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "=COLLECTION"
        },
        "options": {}
      },
      "id": "ee4be003-9e05-4bfc-b7a6-daf4c29db044",
      "name": "Qdrant Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        -1780,
        960
      ],
      "typeVersion": 1,
      "credentials": {
        "qdrantApi": {
          "id": "B48HR0tzPMEW0Bqh",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1800,
        1180
      ],
      "id": "19c36489-d865-41ad-aa0d-a0b2fa272f28",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "jIPBDZRxxuNv6Ke6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -1680,
        1180
      ],
      "id": "c27f9b15-6611-4a86-bde4-91eaa5eba01f",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 300,
        "chunkOverlap": 30
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "typeVersion": 1,
      "position": [
        -1580,
        1380
      ],
      "id": "d18844fd-af26-4918-b3fb-3f1b564f099f",
      "name": "Token Splitter"
    },
    {
      "parameters": {
        "operation": "get",
        "messageId": "={{ $json.body.messageId }}",
        "simple": false,
        "options": {
          "downloadAttachments": true
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -760,
        420
      ],
      "id": "3e5ff43b-bef5-4fe8-96c6-e8d05de8b28a",
      "name": "Gmail",
      "webhookId": "58c94805-de49-4067-8609-3054f2c81b0e",
      "credentials": {
        "gmailOAuth2": {
          "id": "QEjG29kYXkZ4XpUF",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "5cf96104-c887-44fe-b528-30171943dd15",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $binary.isNotEmpty() }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "8f41580b-77a5-4f43-a821-94160b8f17e4",
      "name": "Contain attachments?",
      "type": "n8n-nodes-base.if",
      "position": [
        -520,
        440
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "jsCode": "let results = [];\n\nfor (const item of $input.all()) {\n  for (const key of Object.keys(item.binary)) {\n        results.push({\n            json: {},\n            binary: {\n                data: item.binary[key],\n            }\n        });\n    }\n}\n\nreturn results;"
      },
      "id": "dd9f5afd-e2f7-4021-8559-47f0ab7b00e4",
      "name": "Get PDF and images attachments",
      "type": "n8n-nodes-base.code",
      "position": [
        0,
        -120
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "Get all attachments present in the email (in this WF only PDFs and images are considered)",
        "height": 240,
        "width": 260
      },
      "id": "9d54863e-03b9-49f2-ad45-16798604c5bb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        -200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "31b7fb0b-3149-479e-852a-52c1ec8935ca",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $binary.data.fileExtension }}",
                    "rightValue": "pdf"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "loose"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "9fe6411d-cf35-4fdd-a9ad-8c96f0a5cf66",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    },
                    "leftValue": "={{ $binary.data.fileExtension }}",
                    "rightValue": "=/^(jpg|png)$/i"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "061d708d-bdb1-4a68-ae04-fec5ca7e747d",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        380,
        40
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "f7051505-948c-48b9-b14e-b9f3b950983e",
      "name": "Extract from PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        880,
        -200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Analyze the content of the image and describe it accurately",
        "height": 220,
        "width": 260
      },
      "id": "88c4cf7d-ef17-44f2-a8bb-ac8067348514",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1040,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "## Image Analysis System Prompt\n\nYou are a specialized AI assistant focused on analyzing images. Your task is to carefully examine the image provided as input and produce a detailed, accurate description in plain text format.\n\n### Your responsibilities:\n\n1. Observe and describe the main subject(s) or focal point(s) of the image\n2. Identify notable objects, people, animals, or other elements present\n3. Describe the setting, background, and environment, if applicable\n4. Note any text visible in the image, transcribing it accurately\n5. Recognize any actions, activities, or events taking place\n6. Identify relevant contextual information (time of day, weather, season, etc).\n7. Describe colors, lighting, composition, and other visual elements when relevant\n\n### Response format:\n\n- Utilizing the Vietnamese Language\n- Provide your analysis in plain text only (no HTML, markdown, or other formatting)\n- Begin with a concise overview of what the image depicts\n- Follow with a detailed description covering all significant elements\n- Organize information logically, typically moving from main subjects to background details\n- Use clear, descriptive language that accurately represents what is visible\n- Keep descriptions objective and factual\n\n### What to exclude:\n\n- Speculation about elements not visible in the image\n- Subjective judgments or interpretations beyond what is objectively present\n- Personal opinions about the quality or purpose of the image\n- Complex technical analysis unless specifically relevant\n- Any formatting beyond plain text\n\nThe image to analyze is the one provided in the input.",
        "inputType": "base64",
        "options": {}
      },
      "id": "cf851d07-ce2b-4845-ba1d-fd9d1ab0d04a",
      "name": "Analyze image",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1120,
        140
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "jIPBDZRxxuNv6Ke6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=## PDF Summarization System Prompt\n\nYou are a specialized AI assistant tasked with creating concise, accurate summaries of documents. Your goal is to extract and distill the most important information from the content provided as input and present it in a clear, precise plain text summary.\n\n### Your responsibilities:\n\n1. Identify the main topic and purpose of the document\n2. Extract key points, arguments, findings, or conclusions\n3. Preserve essential data points, statistics, dates, and figures\n4. Recognize and highlight critical information and takeaways\n5. Maintain the original document's logical structure in your summary\n6. Prioritize information based on its significance to the document's purpose\n\n### Summary format:\n\n- Utilizing the Vietnamese Language\n- Provide your summary in plain text only (no formatting)\n- Begin with a concise overview of the document's main topic and purpose\n- Present important points in a logical, sequential narrative\n- Use clear, direct language that accurately represents the original content\n- Maintain appropriate context for all extracted information\n- Keep the summary concise while including all crucial information\n- Use proper transitions between topics to maintain readability\n\n### What to exclude:\n\n- Minor details that don't contribute to the main points\n- Repetitive information\n- Extensive examples unless they're critical to understanding\n- Citations, references, and bibliographic details unless specifically important\n- Decorative or non-essential images (describe important visualized data if relevant)\n- Your own interpretations or opinions not supported by the document\n\n{{ $json.text }}",
        "hasOutputParser": true
      },
      "id": "0cbae546-de59-42ac-ae2d-6971482484ec",
      "name": "PDF Analyzer",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        1100,
        -300
      ],
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "content": "Analyze the content of PDF files and make a summary for each one",
        "height": 200,
        "width": 340
      },
      "id": "1e348f1e-bdb0-43dc-be83-fcfd01dcd5ed",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1060,
        -380
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1120,
        -100
      ],
      "id": "463a798e-22a4-4ede-a5a7-96daddbb114a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "LZZ6AYDlFXn27Wpv",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"content\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "id": "a79f6f1c-60db-48f8-b18b-0491b9c69415",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        1320,
        -80
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "fieldToSplitOut": "=output",
        "options": {}
      },
      "id": "6185161e-677d-4461-aaa1-858b9536bead",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        1460,
        -200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "11592bed-7555-4e61-a692-d71b1a733fd4",
              "name": "content",
              "type": "string",
              "value": "={{ $json.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4a64c956-ca51-478b-b5ec-3dbf7d06af02",
      "name": "Map image summaries",
      "type": "n8n-nodes-base.set",
      "position": [
        1420,
        140
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "html": "={{ $json.textAsHtml }}",
        "options": {}
      },
      "id": "0740d76b-c261-4ac4-82b9-a0795c0fdc15",
      "name": "Convert Text",
      "type": "n8n-nodes-base.markdown",
      "position": [
        100,
        1340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Analyze the content of the email and summarize it",
        "height": 180,
        "width": 320
      },
      "id": "8c2d0d27-948c-44f7-9ade-900c772a8dd5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        300,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "deepseek/deepseek-r1:free",
          "cachedResultName": "deepseek/deepseek-r1:free"
        },
        "options": {}
      },
      "id": "52a58401-b150-427e-b632-83986abda0fc",
      "name": "DeepSeek R1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        440,
        1620
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "jIPBDZRxxuNv6Ke6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ef348518-a9fb-4ea9-bd70-9dcf3bff092a",
              "name": "content",
              "type": "string",
              "value": "={{ $json.response.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8837dce2-1de7-4098-a9be-13235d8cefb5",
      "name": "Email summary",
      "type": "n8n-nodes-base.set",
      "position": [
        1480,
        1360
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "2d54d25a-1678-48df-a021-4452edce13e0",
      "name": "All summaries",
      "type": "n8n-nodes-base.merge",
      "position": [
        2080,
        380
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "content": "All the summaries of the email components (text, PDF, images) are aggregated and a final summary is generated",
        "height": 80,
        "width": 720
      },
      "id": "fd92c5cc-b70b-44c7-80ab-ecca36cb1e11",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2240,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const inputData = $input.all();\n\nconst outputData = inputData.map(item => {\n  \n  const outputValue = item.json.output || item.json.content;\n\n  return {\n    data: {\n      output: outputValue \n    }\n  };\n});\n\nreturn outputData;"
      },
      "id": "1b593b5e-243d-4e9d-9be5-82876f254b7c",
      "name": "Parsing",
      "type": "n8n-nodes-base.code",
      "position": [
        2420,
        380
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "data.output"
            }
          ]
        },
        "options": {}
      },
      "id": "cfe50144-8969-4aaf-b6de-3b4126c3ebba",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        2840,
        380
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=The inputs to synthesize are:\n'''\n{{ $json.output }}\n'''",
        "messages": {
          "messageValues": [
            {
              "message": "## Comprehensive Email Analysis System Prompt\n\nYou are a specialized AI assistant tasked with creating a unified, concise summary of an email and all its attachments. Your input includes a summary of the email text, summaries of any images, and summaries of any PDF attachments. You aim to synthesize all this information into a coherent summary that captures the essential message and purpose.\n\n### Your responsibilities:\n\n1. Identify the overarching theme or purpose connecting the email and its attachments\n2. Recognize relationships between the email content and the attached materials\n3. Extract and consolidate the most critical information from all sources\n4. Maintain proper context when combining information from different sources\n5. Prioritize information based on relevance to the email's main purpose\n6. Create a unified narrative that flows logically between email content and attachments\n\n### Input structure:\n- Email summary: A summary of the main email text\n- Image descriptions: Summaries of any images attached to the email\n- PDF summaries: Condensed versions of any PDF documents attached\n\n### Output format:\n\n- Utilizing the Vietnamese Language\n- Provide your summary in plain text only\n- Begin with a one-sentence statement of the email's overall purpose and theme\n- Present a unified narrative that integrates information from the email and all attachments\n- Organize information by importance and relevance, not by source\n- Keep the final summary concise while including all essential information\n- Use clear transitions to maintain coherence when moving between different information sources\n- Preserve the original intent and tone of the communication\n\n### What to include:\n\n- The main topic and purpose of the communication\n- Key points from both the email and attachments\n- Critical requests, deadlines, or action items\n- Essential details like dates, figures, or specific references\n- Contextual information that clarifies the purpose of attachments\n\n### What to exclude:\n\n- Redundant information repeated across multiple sources\n- Minor details that don't contribute to understanding the main message\n- Excessive descriptions of attachments beyond their relevance to the email's purpose\n- Your interpretations beyond what's supported by the input materials"
            }
          ]
        }
      },
      "id": "4f28b156-8804-4bc9-8114-f0658299785e",
      "name": "Create final summary",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        3220,
        380
      ],
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3460,
        680
      ],
      "id": "722f2320-2c39-47e4-bb80-db6ab19dc825",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "jIPBDZRxxuNv6Ke6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "Hãy tóm tắt email sau bằng văn phong chuyên nghiệp trong tối đa 200 từ:\n\n- **Nội dung**: \"{{ $json.data }}\"\n\nTóm tắt ngắn gọn, súc tích, giữ thông tin quan trọng và giọng điệu chuyên nghiệp, bỏ qua chữ ký email nếu có.",
        "height": 180,
        "width": 320
      },
      "id": "72d788da-0869-4d8b-a4cc-f7a98ecfea05",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Hãy kết hợp và tóm tắt lại các đoạn sau bằng văn phong chuyên nghiệp trong tối đa 200 từ, giữ thông tin quan trọng và giọng điệu chuyên nghiệp, bỏ qua chữ ký email nếu có:\n\n- **Nội dung**: \"{{ $json.data }}\"",
        "height": 180,
        "width": 320
      },
      "id": "ef6870ef-5860-4ce9-bf11-ffe2c69a2f04",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        1640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "markdownToHtml",
        "markdown": "={{ $json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        3640,
        200
      ],
      "id": "a84b9a5d-17cb-4a1b-834b-82fd241beec5",
      "name": "Markdown"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Email Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Email Summarization Chain": {
      "main": [
        [
          {
            "node": "Email summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Contain attachments?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store1": {
      "main": [
        []
      ]
    },
    "Contain attachments?": {
      "main": [
        [
          {
            "node": "Get PDF and images attachments",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get PDF and images attachments": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract from PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from PDF": {
      "main": [
        [
          {
            "node": "PDF Analyzer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "PDF Analyzer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "PDF Analyzer",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "PDF Analyzer": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Map image summaries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert Text": {
      "main": [
        [
          {
            "node": "Email Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek R1": {
      "ai_languageModel": [
        []
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "All summaries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map image summaries": {
      "main": [
        [
          {
            "node": "All summaries",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Email summary": {
      "main": [
        [
          {
            "node": "All summaries",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "All summaries": {
      "main": [
        [
          {
            "node": "Parsing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parsing": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Create final summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Create final summary",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create final summary": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Ho_Chi_Minh",
    "callerPolicy": "workflowsFromSameOwner",
    "saveManualExecutions": true
  },
  "versionId": "aba3301c-2927-4cd2-9776-95ec06ce860b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0fc5947db2adc302667afa82f5dbc69a46e216f6ce7a082ac5e2cdce29bc24fd"
  },
  "id": "aFB4i6F6WcEQ0N36",
  "tags": []
}